{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;AAAa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,qBAAqB,mBAAO,CAAC,uEAA+B;AAC5D,qBAAqB,mBAAO,CAAC,uEAA+B;AAC5D;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAe;;;;;;;;;;;AClCF;AACb;AACA,6CAA6C;AAC7C;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,qCAAqC,mBAAO,CAAC,+CAAc;AAC3D,uBAAuB,mBAAO,CAAC,mDAAgB,GAAG;AAClD,sBAAsB,mBAAO,CAAC,iDAAe;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,kBAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC9Ca;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,oBAAoB;AACpB,kBAAkB,mBAAO,CAAC,iEAA4B;AACtD,oBAAoB;AACptHa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;;;;;;;;;;;AChDL;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,2BAA2B,GAAG,kCAAkC,GAAG,2BAA2B,GAAG,uBAAuB,GAAG,2BAA2B;AACtJ;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACpCa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,+BAA+B,GAAG,mCAAmC,GAAG,oCAAoC,GAAG,gCAAgC,GAAG,sBAAsB,GAAG,oBAAoB,GAAG,2BAA2B,GAAG,yBAAyB;AACzP,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA,+BAA+B;;;;;;;;;;;AC5ClB;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,YAAY;AACZ;AACA;AACA;AACA,YAAY;;;;;;;;;;;ACNC;AACb;AACA;AACA,6CAA6C;AAC7C;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,gCAAgC,mBAAO,CAAC,2CAAe;AACvD;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;;;;;;UCbA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;UEtBA;UACA;UACA;UACA","sources":["webpack://idemips-typescript/./src/ISA/I/formatting.ts","webpack://idemips-typescript/./src/ISA/I/iType.ts","webpack://idemips-typescript/./src/ISA/I/instructions.ts","webpack://idemips-typescript/./src/ISA/I/ordernation.ts","webpack://idemips-typescript/./src/core/helpers/converting.ts","webpack://idemips-typescript/./src/core/helpers/formatting.ts","webpack://idemips-typescript/./src/core/helpers/general.ts","webpack://idemips-typescript/./src/index.ts","webpack://idemips-typescript/webpack/bootstrap","webpack://idemips-typescript/webpack/before-startup","webpack://idemips-typescript/webpack/startup","webpack://idemips-typescript/webpack/after-startup"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst converting_1 = require(\"../../core/helpers/converting\");\r\nconst formatting_1 = require(\"../../core/helpers/formatting\");\r\nfunction formatNonRegisterElement(imm) {\r\n    const valuePatternForNegativeImm = 65536;\r\n    let immValue = parseInt(imm);\r\n    if (imm.includes('-')) {\r\n        immValue += valuePatternForNegativeImm; // pode dar erro pois o cleanElement talvez tire o sinal de menos\r\n    }\r\n    let binaryImmValue = (0, converting_1.convertDecimalToBin)(immValue);\r\n    while (binaryImmValue.length < 16) {\r\n        binaryImmValue = '0' + binaryImmValue;\r\n    }\r\n    return binaryImmValue;\r\n}\r\nfunction formatting() {\r\n    return {\r\n        convertInstructionValuesInBinary(values) {\r\n            const nonRegisterElement = values.label ? values.label : values.imm;\r\n            if (values.imm) {\r\n                values.imm = formatNonRegisterElement(values.imm);\r\n            }\r\n            else {\r\n                values.label = formatNonRegisterElement(values.label);\r\n            }\r\n            values.rs = (0, formatting_1.completeBinaryElementLength)((0, converting_1.convertDecimalToBin)(parseInt((0, formatting_1.cleanElement)(values.rs))));\r\n            values.rt = (0, formatting_1.completeBinaryElementLength)((0, converting_1.convertDecimalToBin)(parseInt((0, formatting_1.cleanElement)(values.rt))));\r\n            console.log(nonRegisterElement);\r\n            console.log(values);\r\n            return Object.values(values).join('');\r\n        }\r\n    };\r\n}\r\nexports.default = formatting();\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst formatting_1 = __importDefault(require(\"./formatting\"));\r\nconst instructions_1 = require(\"./instructions\"); //  \r\nconst ordernation_1 = require(\"./ordernation\");\r\n// class version\r\nclass IType {\r\n    constructor(instructions = instructions_1.instructions, orderInstruction = ordernation_1.ordination, format = formatting_1.default\r\n    // private readonly buildCodeInstruction: Function\r\n    ) {\r\n        this.instructions = instructions;\r\n        this.orderInstruction = orderInstruction;\r\n        this.format = format;\r\n    }\r\n    // isTypeI(op: string) {\r\n    //   return this.instructions[op] !== undefined\r\n    // }\r\n    buildInstructionScope() { } // formatInstruction --> mandar pro convertInstructionValuesInBinary o opcode jÃ¡ capturado das instructions !!!\r\n    teste() {\r\n        console.log(formatting_1.default.convertInstructionValuesInBinary({\r\n            op: this.instructions.addi.opcode,\r\n            rs: '$2',\r\n            rt: '$0',\r\n            imm: '5'\r\n        }));\r\n    }\r\n}\r\nexports.default = new IType();\r\n// // factory function version\r\n// function IType() {\r\n//   const instructions = Instructions\r\n//   const orderInstruction = ordination\r\n//   return {\r\n//     instructions,\r\n//     orderInstruction,\r\n//     // isTypeI(op: string) {\r\n//     //   return instructions[op] !== undefined\r\n//     // },\r\n//     teste() {\r\n//       console.log(instructions.addi.function);\r\n//     }\r\n//   }\r\n// }\r\n// export default IType()\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.instructions = void 0;\r\nconst general_1 = require(\"../../core/helpers/general\");\r\nexports.instructions = {\r\n    addi: {\r\n        opcode: '001000',\r\n        type: 'a',\r\n        does: (rs, imm) => rs + imm\r\n    },\r\n    addiu: {\r\n        opcode: '001001',\r\n        type: 'a',\r\n        does: (rs, imm) => rs + (0, general_1.uInt)(imm)\r\n    },\r\n    andi: {\r\n        opcode: '001100',\r\n        type: 'a',\r\n        does: (rs, imm) => rs & imm\r\n    },\r\n    beq: {\r\n        opcode: '000100',\r\n        type: 'b',\r\n        does: (rs, rt) => rs === rt\r\n    },\r\n    bge: {\r\n        opcode: '000001',\r\n        type: 'b',\r\n        does: (rs, rt) => rs >= rt\r\n    },\r\n    bgt: {\r\n        opcode: '000111',\r\n        type: 'b',\r\n        does: (rs, rt) => rs > rt\r\n    },\r\n    ble: {\r\n        opcode: '000110',\r\n        type: 'b',\r\n        does: (rs, rt) => rs <= rt\r\n    },\r\n    blt: {\r\n        opcode: '000001',\r\n        type: 'b',\r\n        does: (rs, rt) => rs < rt\r\n    },\r\n    bne: {\r\n        opcode: '000100',\r\n        type: 'b',\r\n        does: (rs, rt) => rs !== rt\r\n    },\r\n    bgez: {\r\n        opcode: '000001',\r\n        type: 'c',\r\n        does: (rs) => rs >= 0\r\n    },\r\n    bgtz: {\r\n        opcode: '000111',\r\n        type: 'd',\r\n        does: (rs) => rs > 0\r\n    },\r\n    blez: {\r\n        opcode: '000110',\r\n        type: 'd',\r\n        does: (rs) => rs <= 0\r\n    },\r\n    bltz: {\r\n        opcode: '000001',\r\n        type: 'd',\r\n        does: (rs) => rs < 0\r\n    },\r\n    /*\r\n    lb\trt, imm(rs)\t100000\r\n    lbu\trt, imm(rs)\t100100\r\n    lh\trt, imm(rs)\t100001\r\n    lhu\trt, imm(rs)\t100101\r\n    */\r\n    lui: {\r\n        opcode: '001111',\r\n        type: 'f',\r\n        does: null\r\n    },\r\n    lw: {\r\n        opcode: '100011',\r\n        type: 'e',\r\n        does: null\r\n    },\r\n    /*\r\n    lw\trt, imm(rs)\t100011\r\n    lwc1\trt, imm(rs)\t110001\r\n    */\r\n    ori: {\r\n        opcode: '001101',\r\n        type: 'a',\r\n        does: (rs, imm) => rs | imm\r\n    },\r\n    /*\r\n    sb\trt, imm(rs)\t101000\r\n    */\r\n    slti: {\r\n        opcode: '001010',\r\n        type: 'a',\r\n        does: (rs, imm) => rs < imm ? 1 : 0\r\n    },\r\n    sltiu: {\r\n        opcode: '001011',\r\n        type: 'a',\r\n        does: (rs, imm) => rs < (0, general_1.uInt)(imm) ? 1 : 0\r\n    },\r\n    /*\r\n    sh\trt, imm(rs)\t101001\r\n    sw\trt, imm(rs)\t101011\r\n    swc1  rt, imm(rs)\t111001\r\n    */\r\n    xori: {\r\n        opcode: '001110',\r\n        type: 'a',\r\n        does: (rs, imm) => rs ^ imm\r\n    }\r\n};\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ordination = void 0;\r\nconst opcodeFieldExtensionForOrderC = '00001';\r\nconst opcodeFieldExtensionForOrderD = '00000';\r\nfunction ordination(instruction) {\r\n    if (instruction.func === 'a') {\r\n        return {\r\n            rt: instruction.values[0],\r\n            rs: instruction.values[1],\r\n            imm: parseInt(instruction.values[2])\r\n        };\r\n    }\r\n    if (instruction.func === 'b') {\r\n        return {\r\n            rt: instruction.values[0],\r\n            rs: instruction.values[1],\r\n            label: instruction.values[2]\r\n        };\r\n    }\r\n    if (instruction.func === 'c') {\r\n        return {\r\n            rs: instruction.values[0],\r\n            rt: opcodeFieldExtensionForOrderC,\r\n            label: instruction.values[1],\r\n        };\r\n    }\r\n    if (instruction.func === 'd') {\r\n        return {\r\n            rs: instruction.values[0],\r\n            rt: opcodeFieldExtensionForOrderD,\r\n            label: instruction.values[1],\r\n        };\r\n    }\r\n    if (instruction.func === 'e') {\r\n        return {\r\n            rs: null,\r\n            rt: null,\r\n            imm: null,\r\n        };\r\n    }\r\n    if (instruction.func === 'f') {\r\n        return {\r\n            rs: instruction.values[0],\r\n            imm: parseInt(instruction.values[1])\r\n        };\r\n    }\r\n}\r\nexports.ordination = ordination;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.convertHexToDecimal = exports.convertDecimalToAddressHex = exports.convertDecimalToHex = exports.convertBinToHex = exports.convertDecimalToBin = void 0;\r\nfunction convertDecimalToBin(dec) {\r\n    return dec.toString(2);\r\n}\r\nexports.convertDecimalToBin = convertDecimalToBin;\r\nfunction convertBinToHex(bin) {\r\n    return parseInt(bin, 2).toString(16);\r\n}\r\nexports.convertBinToHex = convertBinToHex;\r\nfunction convertDecimalToHex(dec) {\r\n    return dec.toString(16);\r\n}\r\nexports.convertDecimalToHex = convertDecimalToHex;\r\nfunction convertDecimalToAddressHex(dec) {\r\n    let hex = dec.toString(16);\r\n    while (hex.length !== 8) {\r\n        hex = '0' + hex;\r\n    }\r\n    return '0x' + hex;\r\n}\r\nexports.convertDecimalToAddressHex = convertDecimalToAddressHex;\r\nfunction convertHexToDecimal(hex) {\r\n    return parseInt(hex, 16);\r\n}\r\nexports.convertHexToDecimal = convertHexToDecimal;\r\n// export function convertBinaryInstructionToHex(binaryInstrution: string) {\r\n//   const binaryArrayInstruction = binaryInstrution.split('')\r\n//   const hexArrayInstruction = [];\r\n//   let i = 0;\r\n//   while (i++ !== 8) {\r\n//     const pieceWithHexLenght: string = binaryArrayInstruction.splice(0, 4).join('')\r\n//     hexArrayInstruction.push( convertBinToHex(pieceWithHexLenght) );\r\n//   }\r\n//   return '0x' + hexArrayInstruction.join('');\r\n// }\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.completeBinaryImmLength = exports.completeBinaryElementLength = exports.completeBinaryElementsLength = exports.cleanElementsInstruction = exports.cleanOnlyComma = exports.cleanElement = exports.formatMemoryAddress = exports.memoryAddressBase = void 0;\r\nexports.memoryAddressBase = 4194304;\r\nfunction formatMemoryAddress(currentMemoryCount) {\r\n    const baseAddressIncrement = 4;\r\n    let address = (baseAddressIncrement + currentMemoryCount).toString(16);\r\n    while (address.length != 8) {\r\n        address = '0' + address;\r\n    }\r\n    return '0x' + address;\r\n}\r\nexports.formatMemoryAddress = formatMemoryAddress;\r\nfunction cleanElement(element) {\r\n    return element.includes(',') ? element.slice(1, element.indexOf(',')) : element.slice(1);\r\n}\r\nexports.cleanElement = cleanElement;\r\nfunction cleanOnlyComma(element) {\r\n    return element.includes(',') ? element.slice(0, element.indexOf(',')) : element;\r\n}\r\nexports.cleanOnlyComma = cleanOnlyComma;\r\nfunction cleanElementsInstruction(elements) {\r\n    return elements.map(element => cleanOnlyComma(element));\r\n}\r\nexports.cleanElementsInstruction = cleanElementsInstruction;\r\nfunction completeBinaryElementsLength(elements) {\r\n    return elements.map(element => {\r\n        while (element.length < 5)\r\n            element = '0' + element;\r\n        return element;\r\n    });\r\n}\r\nexports.completeBinaryElementsLength = completeBinaryElementsLength;\r\nfunction completeBinaryElementLength(element) {\r\n    while (element.length < 5)\r\n        element = '0' + element;\r\n    return element;\r\n}\r\nexports.completeBinaryElementLength = completeBinaryElementLength;\r\nfunction completeBinaryImmLength(element) {\r\n    while (element.length < 16)\r\n        element = '0' + element;\r\n    return element;\r\n}\r\nexports.completeBinaryImmLength = completeBinaryImmLength;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.uInt = void 0;\r\nfunction uInt(number) {\r\n    return Math.sqrt(Math.pow(number, 2));\r\n}\r\nexports.uInt = uInt;\r\n","\"use strict\";\r\n/* eslint-disable import/extensions */\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst iType_1 = __importDefault(require(\"./ISA/I/iType\"));\r\n// import errors from './errors/main';\r\n// errors({\r\n//   module: 'back',\r\n//   error: 'back_without_instructions',\r\n// });\r\nconst i = iType_1.default;\r\ni.teste();\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/index.ts\");\n",""],"names":[],"sourceRoot":""}